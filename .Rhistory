# counts$Length <- NULL
counts <- cbind(gene=rownames(counts), counts)
counts$gene <- gsub("\\.[0-9_A-Z]+$", "", counts$gene)
# Aggregate genes with same name
counts <- aggregate(counts[, -1], by=list(gene=counts$gene), FUN=sum)
rownames(counts) <- counts$gene
counts$gene <- NULL
counts$Length <- NULL
# Create DDS object
colData <- data.frame(row.names=colnames(counts),
condition=format_condition(colnames(counts)))
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
dds$condition <- relevel(dds$condition, ref=control)
# PCA plot
rld <- vst(dds, blind=TRUE)
png(glue("processed/{proj}/{proj}_PCA.png"))
plotPCA(rld)
dev.off()
# Remove low count data
# keep <- rowSums(counts(dds)) >= 10
# dds <- dds[keep, ]
# DESeq2 analysis
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition", treatment, control),
alpha=alpha, lfcThreshold=lfcThresh)
# Add gene symbol
res <- add_ensembl_symbol(res)
# Save DESeq results table to output
deGenes <- as.data.frame(res) %>% arrange(padj, desc(log2FoldChange)) # order by adjusted p-value and FC
write.table(deGenes,
file=glue("processed/{proj}/{proj}_DESeq_{treatment}_vs_{control}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
# Visualisation
nUp <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange > 0))
nDown <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange < 0))
png(glue("processed/{proj}/{proj}_MAplot_{treatment}_vs_{control}.png"))
DESeq2::plotMA(res,
main=glue("{proj}: {treatment} vs. {control}
n={nUp + nDown}, UP={nUp}, DOWN={nDown}
alpha={alpha}"))
dev.off()
# Design
proj <- "GSE109834"
control <- "PBS"
treatment <- "LPS"
alpha <- 0.05
lfcThresh <- 0
counts <- read.table(glue("processed/{proj}/{proj}_rawCounts.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE)
# counts$Length <- NULL
counts <- cbind(gene=rownames(counts), counts)
counts$gene <- gsub("\\.[0-9_A-Z]+$", "", counts$gene)
# Aggregate genes with same name
counts <- aggregate(counts[, -1], by=list(gene=counts$gene), FUN=sum)
rownames(counts) <- counts$gene
counts$gene <- NULL
counts$Length <- NULL
kjhlk
# Create DDS object
colData <- data.frame(row.names=colnames(counts),
condition=format_condition(colnames(counts)))
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
dds$condition <- relevel(dds$condition, ref=control)
# PCA plot
rld <- vst(dds, blind=TRUE)
png(glue("processed/{proj}/{proj}_PCA.png"))
plotPCA(rld)
dev.off()
# Remove low count data
# keep <- rowSums(counts(dds)) >= 10
# dds <- dds[keep, ]
# DESeq2 analysis
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition", treatment, control),
alpha=alpha, lfcThreshold=lfcThresh)
# Add gene symbol
res <- add_ensembl_symbol(res)
# Save DESeq results table to output
deGenes <- as.data.frame(res) %>% arrange(padj, desc(log2FoldChange)) # order by adjusted p-value and FC
write.table(deGenes,
file=glue("processed/{proj}/{proj}_DESeq_{treatment}_vs_{control}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
# Visualisation
nUp <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange > 0))
nDown <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange < 0))
png(glue("processed/{proj}/{proj}_MAplot_{treatment}_vs_{control}.png"))
DESeq2::plotMA(res,
main=glue("{proj}: {treatment} vs. {control}
n={nUp + nDown}, UP={nUp}, DOWN={nDown}
alpha={alpha}"))
dev.off()
# Design
proj <- "GSE62641"
control <- "Untreated"
treatment <- "LPS_10ngml"
alpha <- 0.05
lfcThresh <- 0
counts <- read.table(glue("processed/{proj}/{proj}_rawCounts.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE)
# counts$Length <- NULL
counts <- cbind(gene=rownames(counts), counts)
counts$gene <- gsub("\\.[0-9_A-Z]+$", "", counts$gene)
# Aggregate genes with same name
counts <- aggregate(counts[, -1], by=list(gene=counts$gene), FUN=sum)
rownames(counts) <- counts$gene
counts$gene <- NULL
counts$Length <- NULL
# Create DDS object
colData <- data.frame(row.names=colnames(counts),
condition=format_condition(colnames(counts)))
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
dds$condition <- relevel(dds$condition, ref=control)
# PCA plot
rld <- vst(dds, blind=TRUE)
png(glue("processed/{proj}/{proj}_PCA.png"))
plotPCA(rld)
dev.off()
# Remove low count data
# keep <- rowSums(counts(dds)) >= 10
# dds <- dds[keep, ]
# DESeq2 analysis
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition", treatment, control),
alpha=alpha, lfcThreshold=lfcThresh)
# Add gene symbol
res <- add_ensembl_symbol(res)
# Save DESeq results table to output
deGenes <- as.data.frame(res) %>% arrange(padj, desc(log2FoldChange)) # order by adjusted p-value and FC
write.table(deGenes,
file=glue("processed/{proj}/{proj}_DESeq_{treatment}_vs_{control}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
# Visualisation
nUp <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange > 0))
nDown <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange < 0))
png(glue("processed/{proj}/{proj}_MAplot_{treatment}_vs_{control}.png"))
DESeq2::plotMA(res,
main=glue("{proj}: {treatment} vs. {control}
n={nUp + nDown}, UP={nUp}, DOWN={nDown}
alpha={alpha}"))
dev.off()
# Design
proj <- "GSE79898"
control <- "Control"
treatment <- "LPS_2h"
alpha <- 0.05
lfcThresh <- 0
counts <- read.table(glue("processed/{proj}/{proj}_rawCounts.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE)
# counts$Length <- NULL
counts <- cbind(gene=rownames(counts), counts)
counts$gene <- gsub("\\.[0-9_A-Z]+$", "", counts$gene)
# Aggregate genes with same name
counts <- aggregate(counts[, -1], by=list(gene=counts$gene), FUN=sum)
rownames(counts) <- counts$gene
counts$gene <- NULL
counts$Length <- NULL
# Create DDS object
colData <- data.frame(row.names=colnames(counts),
condition=format_condition(colnames(counts)))
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
dds$condition <- relevel(dds$condition, ref=control)
# PCA plot
rld <- vst(dds, blind=TRUE)
png(glue("processed/{proj}/{proj}_PCA.png"))
plotPCA(rld)
dev.off()
# Remove low count data
# keep <- rowSums(counts(dds)) >= 10
# dds <- dds[keep, ]
# DESeq2 analysis
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition", treatment, control),
alpha=alpha, lfcThreshold=lfcThresh)
# Add gene symbol
res <- add_ensembl_symbol(res)
# Save DESeq results table to output
deGenes <- as.data.frame(res) %>% arrange(padj, desc(log2FoldChange)) # order by adjusted p-value and FC
write.table(deGenes,
file=glue("processed/{proj}/{proj}_DESeq_{treatment}_vs_{control}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
# Visualisation
nUp <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange > 0))
nDown <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange < 0))
png(glue("processed/{proj}/{proj}_MAplot_{treatment}_vs_{control}.png"))
DESeq2::plotMA(res,
main=glue("{proj}: {treatment} vs. {control}
n={nUp + nDown}, UP={nUp}, DOWN={nDown}
alpha={alpha}"))
dev.off()
# Design
proj <- "GSE79898"
control <- "Control"
treatment <- "LPS_4h"
alpha <- 0.05
lfcThresh <- 0
counts <- read.table(glue("processed/{proj}/{proj}_rawCounts.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE)
# counts$Length <- NULL
counts <- cbind(gene=rownames(counts), counts)
counts$gene <- gsub("\\.[0-9_A-Z]+$", "", counts$gene)
# Aggregate genes with same name
counts <- aggregate(counts[, -1], by=list(gene=counts$gene), FUN=sum)
rownames(counts) <- counts$gene
counts$gene <- NULL
counts$Length <- NULL
# Create DDS object
colData <- data.frame(row.names=colnames(counts),
condition=format_condition(colnames(counts)))
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
dds$condition <- relevel(dds$condition, ref=control)
# PCA plot
rld <- vst(dds, blind=TRUE)
png(glue("processed/{proj}/{proj}_PCA.png"))
plotPCA(rld)
dev.off()
# Remove low count data
# keep <- rowSums(counts(dds)) >= 10
# dds <- dds[keep, ]
# DESeq2 analysis
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition", treatment, control),
alpha=alpha, lfcThreshold=lfcThresh)
# Add gene symbol
res <- add_ensembl_symbol(res)
# Save DESeq results table to output
deGenes <- as.data.frame(res) %>% arrange(padj, desc(log2FoldChange)) # order by adjusted p-value and FC
write.table(deGenes,
file=glue("processed/{proj}/{proj}_DESeq_{treatment}_vs_{control}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
# Visualisation
nUp <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange > 0))
nDown <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange < 0))
png(glue("processed/{proj}/{proj}_MAplot_{treatment}_vs_{control}.png"))
DESeq2::plotMA(res,
main=glue("{proj}: {treatment} vs. {control}
n={nUp + nDown}, UP={nUp}, DOWN={nDown}
alpha={alpha}"))
dev.off()
# Design
proj <- "GSE75246"
control <- "vehicle"
treatment <- "lps"
alpha <- 0.05
lfcThresh <- 0
counts <- read.table(glue("processed/{proj}/{proj}_rawCounts.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE)
# counts$Length <- NULL
counts <- cbind(gene=rownames(counts), counts)
counts$gene <- gsub("\\.[0-9_A-Z]+$", "", counts$gene)
# Aggregate genes with same name
counts <- aggregate(counts[, -1], by=list(gene=counts$gene), FUN=sum)
rownames(counts) <- counts$gene
counts$gene <- NULL
counts$Length <- NULL
# Create DDS object
colData <- data.frame(row.names=colnames(counts),
condition=format_condition(colnames(counts)))
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
dds$condition <- relevel(dds$condition, ref=control)
# PCA plot
rld <- vst(dds, blind=TRUE)
png(glue("processed/{proj}/{proj}_PCA.png"))
plotPCA(rld)
dev.off()
# Remove low count data
# keep <- rowSums(counts(dds)) >= 10
# dds <- dds[keep, ]
# DESeq2 analysis
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition", treatment, control),
alpha=alpha, lfcThreshold=lfcThresh)
# Add gene symbol
res <- add_ensembl_symbol(res)
# Save DESeq results table to output
deGenes <- as.data.frame(res) %>% arrange(padj, desc(log2FoldChange)) # order by adjusted p-value and FC
write.table(deGenes,
file=glue("processed/{proj}/{proj}_DESeq_{treatment}_vs_{control}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
# Visualisation
nUp <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange > 0))
nDown <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange < 0))
png(glue("processed/{proj}/{proj}_MAplot_{treatment}_vs_{control}.png"))
DESeq2::plotMA(res,
main=glue("{proj}: {treatment} vs. {control}
n={nUp + nDown}, UP={nUp}, DOWN={nDown}
alpha={alpha}"))
dev.off()
# Design
proj <- "GSE98142"
control <- "WT_Control"
treatment <- "WT_LPS"
alpha <- 0.05
lfcThresh <- 0
counts <- read.table(glue("processed/{proj}/{proj}_rawCounts.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE)
# counts$Length <- NULL
counts <- cbind(gene=rownames(counts), counts)
counts$gene <- gsub("\\.[0-9_A-Z]+$", "", counts$gene)
# Aggregate genes with same name
counts <- aggregate(counts[, -1], by=list(gene=counts$gene), FUN=sum)
rownames(counts) <- counts$gene
counts$gene <- NULL
counts$Length <- NULL
# Create DDS object
colData <- data.frame(row.names=colnames(counts),
condition=format_condition(colnames(counts)))
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
dds$condition <- relevel(dds$condition, ref=control)
# PCA plot
rld <- vst(dds, blind=TRUE)
png(glue("processed/{proj}/{proj}_PCA.png"))
plotPCA(rld)
dev.off()
# Remove low count data
# keep <- rowSums(counts(dds)) >= 10
# dds <- dds[keep, ]
# DESeq2 analysis
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition", treatment, control),
alpha=alpha, lfcThreshold=lfcThresh)
# Add gene symbol
res <- add_ensembl_symbol(res)
# Save DESeq results table to output
deGenes <- as.data.frame(res) %>% arrange(padj, desc(log2FoldChange)) # order by adjusted p-value and FC
write.table(deGenes,
file=glue("processed/{proj}/{proj}_DESeq_{treatment}_vs_{control}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
# Visualisation
nUp <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange > 0))
nDown <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange < 0))
png(glue("processed/{proj}/{proj}_MAplot_{treatment}_vs_{control}.png"))
DESeq2::plotMA(res,
main=glue("{proj}: {treatment} vs. {control}
n={nUp + nDown}, UP={nUp}, DOWN={nDown}
alpha={alpha}"))
dev.off()
# Design
proj <- "GSE90046"
control <- "WT_vehicle"
treatment <- "WT_LPS"
alpha <- 0.05
lfcThresh <- 0
counts <- read.table(glue("processed/{proj}/{proj}_rawCounts.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE)
# counts$Length <- NULL
counts <- cbind(gene=rownames(counts), counts)
counts$gene <- gsub("\\.[0-9_A-Z]+$", "", counts$gene)
# Aggregate genes with same name
counts <- aggregate(counts[, -1], by=list(gene=counts$gene), FUN=sum)
rownames(counts) <- counts$gene
counts$gene <- NULL
counts$Length <- NULL
# Create DDS object
colData <- data.frame(row.names=colnames(counts),
condition=format_condition(colnames(counts)))
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
dds$condition <- relevel(dds$condition, ref=control)
# PCA plot
rld <- vst(dds, blind=TRUE)
png(glue("processed/{proj}/{proj}_PCA.png"))
plotPCA(rld)
dev.off()
# Remove low count data
# keep <- rowSums(counts(dds)) >= 10
# dds <- dds[keep, ]
# DESeq2 analysis
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition", treatment, control),
alpha=alpha, lfcThreshold=lfcThresh)
# Add gene symbol
res <- add_ensembl_symbol(res)
# Save DESeq results table to output
deGenes <- as.data.frame(res) %>% arrange(padj, desc(log2FoldChange)) # order by adjusted p-value and FC
write.table(deGenes,
file=glue("processed/{proj}/{proj}_DESeq_{treatment}_vs_{control}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
# Visualisation
nUp <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange > 0))
nDown <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange < 0))
png(glue("processed/{proj}/{proj}_MAplot_{treatment}_vs_{control}.png"))
DESeq2::plotMA(res,
main=glue("{proj}: {treatment} vs. {control}
n={nUp + nDown}, UP={nUp}, DOWN={nDown}
alpha={alpha}"))
dev.off()
# Design
proj <- "GSE80304"
control <- "Control"
treatment <- "LPS_2h"
alpha <- 0.05
lfcThresh <- 0
counts <- read.table(glue("processed/{proj}/{proj}_rawCounts.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE)
# counts$Length <- NULL
counts <- cbind(gene=rownames(counts), counts)
counts$gene <- gsub("\\.[0-9_A-Z]+$", "", counts$gene)
# Aggregate genes with same name
counts <- aggregate(counts[, -1], by=list(gene=counts$gene), FUN=sum)
rownames(counts) <- counts$gene
counts$gene <- NULL
counts$Length <- NULL
# Create DDS object
colData <- data.frame(row.names=colnames(counts),
condition=format_condition(colnames(counts)))
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
dds$condition <- relevel(dds$condition, ref=control)
# PCA plot
rld <- vst(dds, blind=TRUE)
png(glue("processed/{proj}/{proj}_PCA.png"))
plotPCA(rld)
dev.off()
# Remove low count data
# keep <- rowSums(counts(dds)) >= 10
# dds <- dds[keep, ]
# DESeq2 analysis
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition", treatment, control),
alpha=alpha, lfcThreshold=lfcThresh)
# Add gene symbol
res <- add_ensembl_symbol(res)
# Save DESeq results table to output
deGenes <- as.data.frame(res) %>% arrange(padj, desc(log2FoldChange)) # order by adjusted p-value and FC
write.table(deGenes,
file=glue("processed/{proj}/{proj}_DESeq_{treatment}_vs_{control}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
# Visualisation
nUp <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange > 0))
nDown <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange < 0))
png(glue("processed/{proj}/{proj}_MAplot_{treatment}_vs_{control}.png"))
DESeq2::plotMA(res,
main=glue("{proj}: {treatment} vs. {control}
n={nUp + nDown}, UP={nUp}, DOWN={nDown}
alpha={alpha}"))
dev.off()
# Design
proj <- "GSE80304"
control <- "Control"
treatment <- "LPS_4h"
alpha <- 0.05
lfcThresh <- 0
counts <- read.table(glue("processed/{proj}/{proj}_rawCounts.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE)
# counts$Length <- NULL
counts <- cbind(gene=rownames(counts), counts)
counts$gene <- gsub("\\.[0-9_A-Z]+$", "", counts$gene)
# Aggregate genes with same name
counts <- aggregate(counts[, -1], by=list(gene=counts$gene), FUN=sum)
rownames(counts) <- counts$gene
counts$gene <- NULL
counts$Length <- NULL
# Create DDS object
colData <- data.frame(row.names=colnames(counts),
condition=format_condition(colnames(counts)))
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
dds$condition <- relevel(dds$condition, ref=control)
# PCA plot
rld <- vst(dds, blind=TRUE)
png(glue("processed/{proj}/{proj}_PCA.png"))
plotPCA(rld)
dev.off()
# Remove low count data
# keep <- rowSums(counts(dds)) >= 10
# dds <- dds[keep, ]
# DESeq2 analysis
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition", treatment, control),
alpha=alpha, lfcThreshold=lfcThresh)
# Add gene symbol
res <- add_ensembl_symbol(res)
# Save DESeq results table to output
deGenes <- as.data.frame(res) %>% arrange(padj, desc(log2FoldChange)) # order by adjusted p-value and FC
write.table(deGenes,
file=glue("processed/{proj}/{proj}_DESeq_{treatment}_vs_{control}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
# Visualisation
nUp <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange > 0))
nDown <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange < 0))
png(glue("processed/{proj}/{proj}_MAplot_{treatment}_vs_{control}.png"))
DESeq2::plotMA(res,
main=glue("{proj}: {treatment} vs. {control}
n={nUp + nDown}, UP={nUp}, DOWN={nDown}
alpha={alpha}"))
dev.off()
