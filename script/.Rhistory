require("knitr")
opts_knit$set(root.dir="~/mrc/project/rna-seq/")
suppressPackageStartupMessages({
library(ggplot2)
library(DESeq2)
library(glue)
library(biomaRt)
library(dplyr)
library(ggVennDiagram)
})
set1 <- read.table(glue("processed/PROJ1672_DESeq_WT_T3_vs_WT_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha) %>% rownames()
alpha <- 1e-10
set1 <- read.table(glue("processed/PROJ1672_DESeq_WT_T3_vs_WT_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha) %>% rownames()
require("knitr")
opts_knit$set(root.dir="~/mrc/project/rna-seq/")
alpha <- 1e-10
set1 <- read.table(glue("processed/PROJ1672_DESeq_WT_T3_vs_WT_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha) %>% rownames()
set2 <- read.table(glue("processed/PROJ1672_DESeq_B3KO_T3_vs_B3KO_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha) %>% rownames()
totalSet <- list(
set1=set1,
set2=set2
)
# Generate Venn Diagram
ggVennDiagram(totalSet,
category.names=c("WT", "HSPB3 KO")) +
theme(legend.position="right")
alpha <- 1e-10
set1 <- read.table(glue("processed/PROJ1672_DESeq_WT_T3_vs_WT_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha) %>% rownames()
set2 <- read.table(glue("processed/PROJ1672_DESeq_B3KO_T3_vs_B3KO_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha) %>% rownames()
totalSet <- list(
set1=set1,
set2=set2
)
# Generate Venn Diagram
ggVennDiagram(totalSet,
category.names=c("WT", "HSPB3 KO")) +
theme(legend.position="left")
alpha <- 1e-10
set1 <- read.table(glue("processed/PROJ1672_DESeq_WT_T3_vs_WT_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha) %>% rownames()
set2 <- read.table(glue("processed/PROJ1672_DESeq_B3KO_T3_vs_B3KO_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha) %>% rownames()
totalSet <- list(
set1=set1,
set2=set2
)
# Generate Venn Diagram
ggVennDiagram(totalSet,
category.names=c("WT", "HSPB3 KO")) +
theme(legend.position="bottom")
alpha <- 1e-10
set1 <- read.table(glue("processed/PROJ1672_DESeq_WT_T3_vs_WT_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha) %>% rownames()
set2 <- read.table(glue("processed/PROJ1672_DESeq_B3KO_T3_vs_B3KO_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha) %>% rownames()
totalSet <- list(
set1=set1,
set2=set2
)
# Generate Venn Diagram
ggVennDiagram(totalSet,
category.names=c("WT", "HSPB3")) +
theme(legend.position="bottom")
alpha <- 1e-10
set1 <- read.table(glue("processed/PROJ1672_DESeq_WT_T3_vs_WT_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha) %>% rownames()
set2 <- read.table(glue("processed/PROJ1672_DESeq_B3KO_T3_vs_B3KO_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha) %>% rownames()
totalSet <- list(
set1=set1,
set2=set2
)
# Generate Venn Diagram
ggVennDiagram(totalSet,
category.names=c("WT", "HSPB3 KO")) +
theme(legend.position="bottom")
wt <- subset(set1, rownames(set1) %in% set1 && !(rownames(set1) %in% set2))
wt
alpha <- 1e-10
set1 <- read.table(glue("processed/PROJ1672_DESeq_WT_T3_vs_WT_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha)
set2 <- read.table(glue("processed/PROJ1672_DESeq_B3KO_T3_vs_B3KO_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha)
totalSet <- list(
set1=rownames(set1),
set2=rownames(set2)
)
# Generate Venn Diagram
ggVennDiagram(totalSet,
category.names=c("WT", "HSPB3 KO")) +
theme(legend.position="bottom")
# Parse Venn diagram into separate lists
wt <- subset(set1, rownames(set1) %in% set1 && !(rownames(set1) %in% set2))
wt
wt <- subset(set1, (rownames(set1) %in% set1) && !(rownames(set1) %in% set2))
wt
wt <- set1[which(rownames(set1) %in% set1) & !(rownames(set1) %in% set2), ]
wt
wt <- set1[which(rownames(set1) %in% set1 & !(rownames(set1) %in% set2)), ]
wt
!(rownames(set1) %in% set2)
rownames(set1) %in% set2
rownames(set1) %in% set1 & !(rownames(set1) %in% set2)
wt <- set1[which((rownames(set1) %in% set1) & !(rownames(set1) %in% set2)), ]
wt
wt <- set1[(rownames(set1) %in% set1) & !(rownames(set1) %in% set2), ]
wt
(rownames(set1) %in% set1)
wt <- set1[(rownames(set1) %in% rownames(set1)) &
!(rownames(set1) %in% rownames(set2)), ]
wt
nrow(wt)
wt <- set1[!(rownames(set1) %in% rownames(set2)), ]
hspb3 <- set2[!(rownames(set2) %in% rownames(set1)), ]
both <- set1[!(rownames(set1) %in% rownames(wt))]
both <- set1[!(rownames(set1) %in% rownames(wt)), ]
proj <- "PROJ1672"
write.table(wt,
file=glue("processed/{proj}_T3_WTonly.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
write.table(hspb3,
file=glue("processed/{proj}_T3_HSPB3only.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
write.table(both,
file=glue("processed/{proj}_T3_WTandHSPB3.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
alpha <- 1e-10
set1 <- read.table(glue("processed/PROJ1672_DESeq_WT_T3_vs_WT_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha)
set2 <- read.table(glue("processed/PROJ1672_DESeq_B3KO_T3_vs_B3KO_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha)
totalSet <- list(
set1=rownames(set1),
set2=rownames(set2)
)
# Generate Venn Diagram
ggVennDiagram(totalSet,
category.names=c("WT", "HSPB3 KO")) +
theme(legend.position="bottom") +
ggtitle(glue("T3 genes (alpha={alpha})"))
# Parse Venn diagram into separate lists
wt <- set1[!(rownames(set1) %in% rownames(set2)), ]
hspb3 <- set2[!(rownames(set2) %in% rownames(set1)), ]
both <- set1[!(rownames(set1) %in% rownames(wt)), ]
write.table(wt,
file=glue("processed/{proj}_T3_WTonly_{alpha}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
write.table(hspb3,
file=glue("processed/{proj}_T3_HSPB3only_{alpha}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
write.table(both,
file=glue("processed/{proj}_T3_WTandHSPB3_{alpha}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
ggVennDiagram(totalSet,
category.names=c("WT", "HSPB3")) +
theme(legend.position="bottom") +
ggtitle(glue("T3 genes (alpha={alpha})"))
alpha <- 1e-10
set1 <- read.table(glue("processed/PROJ1672_DESeq_WT_T3_vs_WT_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha)
set2 <- read.table(glue("processed/PROJ1672_DESeq_B3KO_T3_vs_B3KO_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha)
totalSet <- list(
set1=rownames(set1),
set2=rownames(set2)
)
# Generate Venn Diagram
venn <- ggVennDiagram(totalSet,
category.names=c("WT", "HSPB3")) +
theme(legend.position="bottom") +
ggtitle(glue("T3 genes (alpha={alpha})"))
ggsave(glue("processed/{proj}_venn_T3.png"), venn)
# Parse Venn diagram into separate lists
wt <- set1[!(rownames(set1) %in% rownames(set2)), ]
hspb3 <- set2[!(rownames(set2) %in% rownames(set1)), ]
both <- set1[!(rownames(set1) %in% rownames(wt)), ]
write.table(wt,
file=glue("processed/{proj}_T3_WTonly_{alpha}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
write.table(hspb3,
file=glue("processed/{proj}_T3_HSPB3only_{alpha}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
write.table(both,
file=glue("processed/{proj}_T3_WTandHSPB3_{alpha}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
alpha <- 1e-10
set1 <- read.table(glue("processed/PROJ1672_DESeq_WT_T5_vs_WT_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha)
set2 <- read.table(glue("processed/PROJ1672_DESeq_B3KO_T5_vs_B3KO_T0.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE) %>%
filter(padj < alpha)
totalSet <- list(
set1=rownames(set1),
set2=rownames(set2)
)
# Generate Venn Diagram
venn <- ggVennDiagram(totalSet,
category.names=c("WT", "HSPB3")) +
theme(legend.position="bottom") +
ggtitle(glue("T5 genes (alpha={alpha})"))
ggsave(glue("processed/{proj}_venn_T5.png"), venn)
# Parse Venn diagram into separate lists
wt <- set1[!(rownames(set1) %in% rownames(set2)), ]
hspb3 <- set2[!(rownames(set2) %in% rownames(set1)), ]
both <- set1[!(rownames(set1) %in% rownames(wt)), ]
write.table(wt,
file=glue("processed/{proj}_T5_WTonly_{alpha}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
write.table(hspb3,
file=glue("processed/{proj}_T5_HSPB3only_{alpha}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
write.table(both,
file=glue("processed/{proj}_T5_WTandHSPB3_{alpha}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
