colData <- data.frame(row.names=colnames(counts),
condition=format_condition(colnames(counts)))
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
dds$condition <- relevel(dds$condition, ref=control)
# PCA plot
rld <- vst(dds, blind=TRUE)
png(glue("processed/{proj}/{proj}_PCA.png"))
plotPCA(rld)
dev.off()
# Remove low count data
# keep <- rowSums(counts(dds)) >= 10
# dds <- dds[keep, ]
# DESeq2 analysis
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition", treatment, control),
alpha=alpha, lfcThreshold=lfcThresh)
# Add gene symbol
res <- add_ensembl_symbol(res)
# Save DESeq results table to output
deGenes <- as.data.frame(res) %>% arrange(padj, desc(log2FoldChange)) # order by adjusted p-value and FC
write.table(deGenes,
file=glue("processed/{proj}/{proj}_DESeq_{treatment}_vs_{control}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
# Visualisation
nUp <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange > 0))
nDown <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange < 0))
png(glue("processed/{proj}/{proj}_MAplot_{treatment}_vs_{control}.png"))
DESeq2::plotMA(res,
main=glue("{proj}: {treatment} vs. {control}
n={nUp + nDown}, UP={nUp}, DOWN={nDown}
alpha={alpha}"))
dev.off()
?vst
require("knitr")
opts_knit$set(root.dir="~/mrc/project/rna-seq/")
suppressPackageStartupMessages({
library(ggplot2)
library(DESeq2)
library(glue)
library(biomaRt)
library(dplyr)
})
add_ensembl_symbol <- function (table) {
genes <- row.names(table)
if (grepl("ENSG", genes[1], fixed=TRUE)) {
ensemblDataset <- "hsapiens_gene_ensembl"
symbol <- "hgnc_symbol"
} else if (grepl("ENSMUSG", genes[1], fixed=TRUE)) {
ensemblDataset <- "mmusculus_gene_ensembl"
symbol <- "mgi_symbol"
}
mart <- useDataset(ensemblDataset, useMart("ENSEMBL_MART_ENSEMBL", host="http://www.ensembl.org"))
geneList <- getBM(filters="ensembl_gene_id",
attributes=c("ensembl_gene_id", symbol),
values=genes,
mart=mart)
geneList <- distinct(geneList, ensembl_gene_id, .keep_all=TRUE)
row.names(geneList) <- geneList[, 1]
geneList[, 1] <- NULL
table$geneSymbol <- geneList[, 1][match(rownames(table), rownames(geneList))]
newTable <- table
return(newTable)
}
format_condition <- function (colnames) {
replace <- c("_[0-9]*$", "_rep[0-9]*$", "^[A-Z]{3}[0-9]+_", "^[0-9]+_")
for (r in replace) {
colnames <- gsub(r, "", colnames)
}
return(colnames)
}
proj <- "GSE122292"
counts <- read.table(glue("processed/{proj}/{proj}_rawCounts.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE)
# Design
control <- "WT_0min"
treatment <- "WT_60min"
alpha <- 0.05
lfcThresh <- 0
# counts$Length <- NULL
counts <- cbind(gene=rownames(counts), counts)
counts$gene <- gsub("\\.[0-9_A-Z]+$", "", counts$gene)
# Aggregate genes with same name
counts <- aggregate(counts[, -1], by=list(gene=counts$gene), FUN=sum)
rownames(counts) <- counts$gene
counts$gene <- NULL
counts$Length <- NULL
# Create DDS object
colData <- data.frame(row.names=colnames(counts),
condition=format_condition(colnames(counts)))
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
dds$condition <- relevel(dds$condition, ref=control)
# PCA plot
rld <- vst(dds, blind=TRUE)
png(glue("processed/{proj}/{proj}_PCA.png"))
plotPCA(rld)
dev.off()
# Remove low count data
# keep <- rowSums(counts(dds)) >= 10
# dds <- dds[keep, ]
# DESeq2 analysis
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition", treatment, control),
alpha=alpha, lfcThreshold=lfcThresh)
# Add gene symbol
res <- add_ensembl_symbol(res)
# Save DESeq results table to output
deGenes <- as.data.frame(res) %>% arrange(padj, desc(log2FoldChange)) # order by adjusted p-value and FC
write.table(deGenes,
file=glue("processed/{proj}/{proj}_DESeq_{treatment}_vs_{control}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
# Visualisation
nUp <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange > 0))
nDown <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange < 0))
png(glue("processed/{proj}/{proj}_MAplot_{treatment}_vs_{control}.png"))
DESeq2::plotMA(res,
main=glue("{proj}: {treatment} vs. {control}
n={nUp + nDown}, UP={nUp}, DOWN={nDown}
alpha={alpha}"))
dev.off()
proj <- "GSE110243"
counts <- read.table(glue("processed/{proj}/{proj}_rawCounts.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE)
# Design
control <- "WT_untreated"
treatment <- "WT_LPS"
alpha <- 0.05
lfcThresh <- 0
# counts$Length <- NULL
counts <- cbind(gene=rownames(counts), counts)
counts$gene <- gsub("\\.[0-9_A-Z]+$", "", counts$gene)
# Aggregate genes with same name
counts <- aggregate(counts[, -1], by=list(gene=counts$gene), FUN=sum)
rownames(counts) <- counts$gene
counts$gene <- NULL
counts$Length <- NULL
# Create DDS object
colData <- data.frame(row.names=colnames(counts),
condition=format_condition(colnames(counts)))
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
dds$condition <- relevel(dds$condition, ref=control)
# PCA plot
rld <- vst(dds, blind=TRUE)
png(glue("processed/{proj}/{proj}_PCA.png"))
plotPCA(rld)
dev.off()
# Remove low count data
# keep <- rowSums(counts(dds)) >= 10
# dds <- dds[keep, ]
# DESeq2 analysis
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition", treatment, control),
alpha=alpha, lfcThreshold=lfcThresh)
proj <- "GSE110243"
counts <- read.table(glue("processed/{proj}/{proj}_rawCounts.txt"),
header=TRUE, sep='\t',
row.names=1, check.names=FALSE)
# Design
control <- "WT_untreated"
treatment <- "WT_LPS_1h"
alpha <- 0.05
lfcThresh <- 0
# counts$Length <- NULL
counts <- cbind(gene=rownames(counts), counts)
counts$gene <- gsub("\\.[0-9_A-Z]+$", "", counts$gene)
# Aggregate genes with same name
counts <- aggregate(counts[, -1], by=list(gene=counts$gene), FUN=sum)
rownames(counts) <- counts$gene
counts$gene <- NULL
counts$Length <- NULL
# Create DDS object
colData <- data.frame(row.names=colnames(counts),
condition=format_condition(colnames(counts)))
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
dds$condition <- relevel(dds$condition, ref=control)
# PCA plot
rld <- vst(dds, blind=TRUE)
png(glue("processed/{proj}/{proj}_PCA.png"))
plotPCA(rld)
dev.off()
# Remove low count data
# keep <- rowSums(counts(dds)) >= 10
# dds <- dds[keep, ]
# DESeq2 analysis
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition", treatment, control),
alpha=alpha, lfcThreshold=lfcThresh)
# Add gene symbol
res <- add_ensembl_symbol(res)
# Save DESeq results table to output
deGenes <- as.data.frame(res) %>% arrange(padj, desc(log2FoldChange)) # order by adjusted p-value and FC
write.table(deGenes,
file=glue("processed/{proj}/{proj}_DESeq_{treatment}_vs_{control}.txt"),
row.names=TRUE, col.names=TRUE, sep="\t", quote=FALSE)
# Visualisation
nUp <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange > 0))
nDown <- nrow(filter(as.data.frame(res), padj < alpha & log2FoldChange < 0))
png(glue("processed/{proj}/{proj}_MAplot_{treatment}_vs_{control}.png"))
DESeq2::plotMA(res,
main=glue("{proj}: {treatment} vs. {control}
n={nUp + nDown}, UP={nUp}, DOWN={nDown}
alpha={alpha}"))
dev.off()
install.packages('gplots')
install.packages('RColorBrewer')
install.packages("RColorBrewer")
install.packages("RColorBrewer")
#### Packages ####
library(gplots)
library(RColorBrewer)
zscore_matrix <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
zscore_matrix
#### Packages ####
library(gplots)
library(RColorBrewer)
z.table <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
z.matrix <- z.table
z.matrix$gene_id <- NULL
z.matrix$symbol <- NULL
rownames(z.matrix) <- data[, 2]
#### Packages ####
library(gplots)
library(RColorBrewer)
z.table <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
z.matrix <- data.matrix(z.table[, 3:ncol(z.table)])
rownames(z.matrix) <- data[, 2]
#### Packages ####
library(gplots)
library(RColorBrewer)
z.table <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
z.matrix <- data.matrix(z.table[, 3:ncol(z.table)])
rownames(z.matrix) <- z.table[, 2]
#### Packages ####
library(gplots)
library(RColorBrewer)
#### Load data ####
z.table <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
z.matrix <- data.matrix(z.table[, 3:ncol(z.table)])
rownames(z.matrix) <- z.table[, 2]
#### Heatmap ####
# Set up colour palette
palette <- colorRampPalette(c("blue", "white", "red"))(n = 299)
heatmap.2(cellnote=z.matrix,
main="Fold Change",
notecol="black",
density.info="none",
trace="none",
margins=c(12, 9),
col=palette)
#### Packages ####
library(gplots)
library(RColorBrewer)
#### Load data ####
z.table <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
z.matrix <- data.matrix(z.table[, 3:ncol(z.table)])
rownames(z.matrix) <- z.table[, 2]
#### Heatmap ####
# Set up colour palette
palette <- colorRampPalette(c("blue", "white", "red"))(n = 299)
heatmap.2(z.matrix,
main="Fold Change",
notecol="black",
density.info="none",
trace="none",
margins=c(12, 9),
col=palette)
#### Packages ####
library(gplots)
library(RColorBrewer)
#### Load data ####
z.table <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
# Drop columns
z.table$GSE55385 <- NULL
z.table$GSE134456
z.matrix <- data.matrix(z.table[, 3:ncol(z.table)])
rownames(z.matrix) <- z.table[, 2]
#### Heatmap ####
# Set up colour palette
palette <- colorRampPalette(c("blue", "white", "red"))(n = 299)
heatmap.2(z.matrix,
main="Fold Change",
notecol="black",
density.info="none",
trace="none",
margins=c(12, 9),
col=palette)
#### Packages ####
library(gplots)
library(RColorBrewer)
#### Load data ####
z.table <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
# Drop columns
z.table$GSE55385 <- NULL
z.table$GSE134456 <- NULL
z.matrix <- data.matrix(z.table[, 3:ncol(z.table)])
rownames(z.matrix) <- z.table[, 2]
#### Heatmap ####
# Set up colour palette
palette <- colorRampPalette(c("blue", "white", "red"))(n = 299)
heatmap.2(z.matrix,
main="Fold Change",
notecol="black",
density.info="none",
trace="none",
margins=c(12, 9),
col=palette)
#### Packages ####
library(gplots)
library(RColorBrewer)
#### Load data ####
z.table <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
# Drop columns
z.table$GSE55385 <- NULL
z.table$GSE134456 <- NULL
z.matrix <- data.matrix(z.table[, 3:ncol(z.table)])
rownames(z.matrix) <- z.table[, 2]
z.matrix[rowSums(is.na(z.matrix)) != ncol(z.matrix), ]
#### Heatmap ####
# Set up colour palette
palette <- colorRampPalette(c("blue", "white", "red"))(n = 299)
heatmap.2(z.matrix,
main="Fold Change",
notecol="black",
density.info="none",
trace="none",
margins=c(12, 9),
col=palette)
#### Packages ####
library(gplots)
library(RColorBrewer)
#### Load data ####
z.table <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
# Drop columns
z.table$GSE55385 <- NULL
z.table$GSE134456 <- NULL
z.matrix <- data.matrix(z.table[, 3:ncol(z.table)])
rownames(z.matrix) <- z.table[, 2]
z.matrix <- z.matrix[rowSums(is.na(z.matrix)) != ncol(z.matrix), ]
#### Heatmap ####
# Set up colour palette
palette <- colorRampPalette(c("blue", "white", "red"))(n = 299)
heatmap.2(z.matrix,
main="Fold Change",
notecol="black",
density.info="none",
trace="none",
margins=c(12, 9),
col=palette)
z.matrix
z.matrix <- z.matrix[rowSums(is.na(z.matrix)) != ncol(z.matrix), ]
#### Packages ####
library(gplots)
library(RColorBrewer)
#### Load data ####
z.table <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
# Drop columns
z.table$GSE55385 <- NULL
z.table$GSE134456 <- NULL
z.matrix <- data.matrix(z.table[, 3:ncol(z.table)])
rownames(z.matrix) <- z.table[, 2]
z.matrix <- z.matrix[rowSums(is.na(z.matrix)) != ncol(z.matrix), ]
#### Heatmap ####
# Set up colour palette
palette <- colorRampPalette(c("blue", "white", "red"))(n = 299)
heatmap.2(z.matrix,
main="Fold Change",
notecol="black",
density.info="none",
trace="none",
margins=c(12, 9),
col=palette,
na.color="gray")
sum(is.infinite(z.matrix))
sum(is.na(as.matrix(dist(z.matrix))))
is.na(as.matrix(dist(z.matrix)))
length(z.matrix)
dim(z.matrix)
#### Packages ####
library(gplots)
library(RColorBrewer)
#### Load data ####
z.table <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
# Drop columns
z.table$GSE55385 <- NULL
z.table$GSE134456 <- NULL
z.matrix <- data.matrix(z.table[, 3:ncol(z.table)])
rownames(z.matrix) <- z.table[, 2]
z.matrix <- z.matrix[rowSums(is.na(z.matrix)) != ncol(z.matrix), ]
#### Heatmap ####
# Set up colour palette
palette <- colorRampPalette(c("blue", "white", "red"))(n = 299)
heatmap.2(z.matrix,
main="Fold Change",
Rowv=NA, Colv=NA,
notecol="black",
density.info="none",
trace="none",
margins=c(12, 9),
col=palette,
na.color="gray")
#### Packages ####
library(gplots)
library(RColorBrewer)
#### Load data ####
z.table <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
# Drop columns
z.table$GSE55385 <- NULL
z.table$GSE134456 <- NULL
z.matrix <- data.matrix(z.table[, 3:ncol(z.table)])
rownames(z.matrix) <- z.table[, 2]
z.matrix <- z.matrix[rowSums(is.na(z.matrix)) != ncol(z.matrix), ]
#### Heatmap ####
# Set up colour palette
palette <- colorRampPalette(c("blue", "white", "red"))(n = 299)
heatmap.2(z.matrix,
main="Fold Change",
Rowv=NA, Colv=NA,
notecol="black",
density.info="none",
trace="none",
col=palette,
na.color="gray")
#### Packages ####
library(gplots)
library(RColorBrewer)
#### Load data ####
z.table <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
# Drop columns
z.table <- z.table[,colSums(is.na(z.table)) < nrow(z.table)]
z.matrix <- data.matrix(z.table[, 3:ncol(z.table)])
rownames(z.matrix) <- z.table[, 2]
z.matrix <- z.matrix[rowSums(is.na(z.matrix)) != ncol(z.matrix), ]
#### Heatmap ####
# Set up colour palette
palette <- colorRampPalette(c("blue", "white", "red"))(n = 299)
heatmap.2(z.matrix,
main="Fold Change",
notecol="black",
density.info="none",
trace="none",
col=palette,
na.color="gray")
#### Packages ####
library(gplots)
library(RColorBrewer)
library(dplyr)
#### Load data ####
z.table <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
z.matrix <- data.matrix(z.table[, 3:ncol(z.table)])
rownames(z.matrix) <- z.table[, 2]
z.matrix <- z.matrix[, colSums(is.na(z.matrix)) < nrow(z.matrix)] # remove columns with all NA
z.matrix <- z.matrix[rowSums(is.na(z.matrix)) != ncol(z.matrix), ] # remove rows with all NA
#### Heatmap ####
# Set up colour palette
palette <- colorRampPalette(c("blue", "white", "red"))(n = 299)
heatmap.2(z.matrix,
main="Fold Change",
notecol="black",
density.info="none",
trace="none",
col=palette,
na.color="gray")
BiocManager::install("impute")
#### Packages ####
library(gplots)
library(RColorBrewer)
library(dplyr)
#### Load data ####
z.table <- read.csv("~/mrc/project/rna-seq/data/Inflammation_LPSinWTonly_Mus musculus_macrophage_foldChange.txt",
sep="\t")
z.matrix <- data.matrix(z.table[, 3:ncol(z.table)])
rownames(z.matrix) <- z.table[, 2]
z.matrix <- z.matrix[, colSums(is.na(z.matrix)) < nrow(z.matrix)] # remove columns with all NA
z.matrix <- z.matrix[rowSums(is.na(z.matrix)) != ncol(z.matrix), ] # remove rows with all NA
#### Heatmap ####
# Set up colour palette
palette <- colorRampPalette(c("blue", "white", "red"))(n = 299)
heatmap.2(z.matrix,
main="Fold Change",
notecol="black",
Rowv=NA, Colv=NA,
density.info="none",
trace="none",
col=palette,
na.color="black")
z.matrix
is.na(z.matrix)
sum(is.na(z.matrix))
